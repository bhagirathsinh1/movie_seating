{
    "sourceFile": "lib/method/alertDilog_method.dart",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1645702004675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1645702291941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,11 +6,15 @@\n   TextEditingController textGotoValueColumn = TextEditingController();\r\n \r\n   final _formKeyRow = GlobalKey<FormState>();\r\n   final _formKeyColumn = GlobalKey<FormState>();\r\n-  AlertDialogMethodClass({Key? key, required this.onAvailableSeatChanged});\r\n+  AlertDialogMethodClass(\r\n+      {Key? key,\r\n+      required this.onRowValueChanged,\r\n+      required this.onColumnValueChanged});\r\n \r\n-  ValueChanged<int> onAvailableSeatChanged;\r\n+  ValueChanged<int> onRowValueChanged;\r\n+  ValueChanged<int> onColumnValueChanged;\r\n \r\n   showGotoAlert(BuildContext context) {\r\n     // set up the buttons\r\n     Widget cancelButton = TextButton(\r\n@@ -27,12 +31,14 @@\n           int tempRow = int.parse(textGotoValueRow.text.toString());\r\n           int tempcolumn = int.parse(textGotoValueColumn.text.toString());\r\n \r\n           print('------------first temp--------$tempRow--------------');\r\n-          setState(() {\r\n-            rowvalue = tempRow;\r\n-            columnvalue = tempcolumn;\r\n-          });\r\n+          onRowValueChanged(tempRow);\r\n+          onColumnValueChanged(tempcolumn);\r\n+          // setState(() {\r\n+          //   rowvalue = tempRow;\r\n+          //   columnvalue = tempcolumn;\r\n+          // });\r\n           Navigator.pop(context); // Navigator.pop(context);\r\n         }\r\n       },\r\n     );\r\n"
                },
                {
                    "date": 1645702617714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,13 +33,10 @@\n \r\n           print('------------first temp--------$tempRow--------------');\r\n           onRowValueChanged(tempRow);\r\n           onColumnValueChanged(tempcolumn);\r\n-          // setState(() {\r\n-          //   rowvalue = tempRow;\r\n-          //   columnvalue = tempcolumn;\r\n-          // });\r\n-          Navigator.pop(context); // Navigator.pop(context);\r\n+\r\n+          Navigator.pop(context);\r\n         }\r\n       },\r\n     );\r\n \r\n"
                },
                {
                    "date": 1645702643694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,17 +73,17 @@\n                     ], // Only numbers can be entered\r\n                     decoration: const InputDecoration(\r\n                         border: UnderlineInputBorder(), labelText: 'Enter Row'),\r\n                   ),\r\n-                  // Align(\r\n-                  //   alignment: Alignment.topRight,\r\n-                  //   child: Text(\r\n-                  //     'Enter Row',\r\n-                  //     style: TextStyle(\r\n-                  //       color: Colors.grey,\r\n-                  //     ),\r\n-                  //   ),\r\n-                  // )\r\n+                  Align(\r\n+                    alignment: Alignment.topRight,\r\n+                    child: Text(\r\n+                      'blah blah',\r\n+                      style: TextStyle(\r\n+                        color: Colors.grey,\r\n+                      ),\r\n+                    ),\r\n+                  )\r\n                 ],\r\n               ),\r\n             ),\r\n             Form(\r\n"
                },
                {
                    "date": 1645702687407,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,17 +73,17 @@\n                     ], // Only numbers can be entered\r\n                     decoration: const InputDecoration(\r\n                         border: UnderlineInputBorder(), labelText: 'Enter Row'),\r\n                   ),\r\n-                  Align(\r\n-                    alignment: Alignment.topRight,\r\n-                    child: Text(\r\n-                      'blah blah',\r\n-                      style: TextStyle(\r\n-                        color: Colors.grey,\r\n-                      ),\r\n-                    ),\r\n-                  )\r\n+                  // Align(\r\n+                  //   alignment: Alignment.topRight,\r\n+                  //   child: Text(\r\n+                  //     'Enter Row',\r\n+                  //     style: TextStyle(\r\n+                  //       color: Colors.grey,\r\n+                  //     ),\r\n+                  //   ),\r\n+                  // )\r\n                 ],\r\n               ),\r\n             ),\r\n             Form(\r\n"
                }
            ],
            "date": 1645702004675,
            "name": "Commit-0",
            "content": "import 'package:flutter/material.dart';\r\nimport 'package:flutter/services.dart';\r\n\r\nclass AlertDialogMethodClass {\r\n  TextEditingController textGotoValueRow = TextEditingController();\r\n  TextEditingController textGotoValueColumn = TextEditingController();\r\n\r\n  final _formKeyRow = GlobalKey<FormState>();\r\n  final _formKeyColumn = GlobalKey<FormState>();\r\n  AlertDialogMethodClass({Key? key, required this.onAvailableSeatChanged});\r\n\r\n  ValueChanged<int> onAvailableSeatChanged;\r\n\r\n  showGotoAlert(BuildContext context) {\r\n    // set up the buttons\r\n    Widget cancelButton = TextButton(\r\n      child: Text(\"CANCEL\"),\r\n      onPressed: () {\r\n        Navigator.pop(context);\r\n      },\r\n    );\r\n    Widget continueButton = TextButton(\r\n      child: Text(\"OK\"),\r\n      onPressed: () {\r\n        if (_formKeyRow.currentState!.validate() &&\r\n            _formKeyColumn.currentState!.validate()) {\r\n          int tempRow = int.parse(textGotoValueRow.text.toString());\r\n          int tempcolumn = int.parse(textGotoValueColumn.text.toString());\r\n\r\n          print('------------first temp--------$tempRow--------------');\r\n          setState(() {\r\n            rowvalue = tempRow;\r\n            columnvalue = tempcolumn;\r\n          });\r\n          Navigator.pop(context); // Navigator.pop(context);\r\n        }\r\n      },\r\n    );\r\n\r\n    // set up the AlertDialog\r\n    AlertDialog alert = AlertDialog(\r\n      title: Text(\"Enter Row & Column\"),\r\n      content: Container(\r\n        height: 180,\r\n        child: Column(\r\n          children: [\r\n            Form(\r\n              key: _formKeyRow,\r\n              child: Column(\r\n                mainAxisSize: MainAxisSize.min,\r\n                children: [\r\n                  TextFormField(\r\n                    controller: textGotoValueRow,\r\n                    validator: (value) {\r\n                      if (value != null && value != \"\") {\r\n                        int temp = int.parse(value.toString());\r\n                        if (temp < 1) {\r\n                          return \"Row Can't be 0\";\r\n                        } else {\r\n                          return null;\r\n                        }\r\n                      } else {\r\n                        return \"Enter Row\";\r\n                      }\r\n                    },\r\n\r\n                    keyboardType: TextInputType.number,\r\n                    inputFormatters: <TextInputFormatter>[\r\n                      FilteringTextInputFormatter.digitsOnly\r\n                    ], // Only numbers can be entered\r\n                    decoration: const InputDecoration(\r\n                        border: UnderlineInputBorder(), labelText: 'Enter Row'),\r\n                  ),\r\n                  // Align(\r\n                  //   alignment: Alignment.topRight,\r\n                  //   child: Text(\r\n                  //     'Enter Row',\r\n                  //     style: TextStyle(\r\n                  //       color: Colors.grey,\r\n                  //     ),\r\n                  //   ),\r\n                  // )\r\n                ],\r\n              ),\r\n            ),\r\n            Form(\r\n              key: _formKeyColumn,\r\n              child: Column(\r\n                mainAxisSize: MainAxisSize.min,\r\n                children: [\r\n                  TextFormField(\r\n                    controller: textGotoValueColumn,\r\n                    validator: (value) {\r\n                      if (value != null && value != \"\") {\r\n                        int temp = int.parse(value.toString());\r\n                        if (temp < 1) {\r\n                          return \"Column Can't be 0\";\r\n                        } else {\r\n                          return null;\r\n                        }\r\n                      } else {\r\n                        return \"Enter Column\";\r\n                      }\r\n                    },\r\n\r\n                    keyboardType: TextInputType.number,\r\n                    inputFormatters: <TextInputFormatter>[\r\n                      FilteringTextInputFormatter.digitsOnly\r\n                    ], // Only numbers can be entered\r\n                    decoration: const InputDecoration(\r\n                        border: UnderlineInputBorder(),\r\n                        labelText: 'Enter Column'),\r\n                  ),\r\n                  // Align(\r\n                  //   alignment: Alignment.topRight,\r\n                  //   child: Text(\r\n                  //     'Enter Row',\r\n                  //     style: TextStyle(\r\n                  //       color: Colors.grey,\r\n                  //     ),\r\n                  //   ),\r\n                  // )\r\n                ],\r\n              ),\r\n            ),\r\n          ],\r\n        ),\r\n      ),\r\n      actions: [\r\n        cancelButton,\r\n        continueButton,\r\n      ],\r\n    );\r\n\r\n    // show the dialog\r\n    showDialog(\r\n      context: context,\r\n      builder: (BuildContext context) {\r\n        return alert;\r\n      },\r\n    );\r\n  }\r\n}\r\n"
        }
    ]
}